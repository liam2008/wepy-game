<style lang="less">
  @import "./styles/weui/style/weui.less";
  @import "./styles/custom/index.less";
  @import "./styles/icon/iconfont.less";
</style>

<script>
  import wepy from 'wepy'
  import 'wepy-async-function'

  import {service} from './api/api'

  import {setStore} from 'wepy-redux'
  import configStore from './store'

  const store = configStore()
  setStore(store)

  export default class extends wepy.app {
    config = {
      pages: [
        'pages/unauthorize',
        'pages/home',
        'pages/hot',
        'pages/girl',
        'pages/service',
        'pages/more',
        'pages/authorize',
        'pages/search'
      ],
      window: {
        navigationBarTitleText: '游戏',
        navigationBarTextStyle: 'white',
        backgroundTextStyle: 'light',
        navigationBarBackgroundColor: '#33bdfe'
      },
      tabBar: {
        color: '#AEADAD',
        selectedColor: '#33bdfe',
        backgroundColor: '#fff',
        borderStyle: 'black',
        list: [
          {
            pagePath: 'pages/home',
            selectedIconPath: './images/tabbars/home-active.png',
            iconPath: './images/tabbars/home.png',
            text: '首页'
          },
          {
            pagePath: 'pages/hot',
            selectedIconPath: './images/tabbars/hot-active.png',
            iconPath: './images/tabbars/hot.png',
            text: '热门'
          },
          {
            pagePath: 'pages/girl',
            selectedIconPath: './images/tabbars/girl-active.png',
            iconPath: './images/tabbars/girl.png',
            text: '女生'
          },
          {
            pagePath: 'pages/service',
            selectedIconPath: './images/tabbars/service-active.png',
            iconPath: './images/tabbars/service.png',
            text: '开服'
          },
          {
            pagePath: 'pages/more',
            selectedIconPath: './images/tabbars/more-active.png',
            iconPath: './images/tabbars/more.png',
            text: '更多'
          }
        ]
      },
      networkTimeout: {
        request: 5000,
        downloadFile: 10000
      },
      debug: true
    }

    globalData = {
      version: '1.0.3',
      versionId: 2
    }

    constructor() {
      super()
      this.use('requestfix')
    }

    onLaunch() {
      // let self = this
      //判断是否屏蔽
      // wepy.request({
      //   url: service.isOpen,
      //   success: function (res) {
      //     console.log('xxxxxxxxxxxxx')
      //     let newVersion = res.data.data
      //     let oldVersion = self.globalData.version
      //     console.log('xxxxxxxxxxxxxxxx', newVersion !== oldVersion)
      //     if (newVersion !== oldVersion) {
      //       wepy.reLaunch({url: '/pages/home'})
      //     } else {
      //       wepy.reLaunch({url: '/pages/unauthorize/unauthorize'})
      //     }
      //   }
      // })
      // this.$get({url: service.isOpen}, {
      //   complete(res) {
      //     let newVersion = res.data.data
      //     let oldVersion = self.$parent.globalData.version
      //     if (newVersion === oldVersion) {
      //       wepy.reLaunch({url: '/pages/unauthorize'})
      //     } else {
      //       wepy.reLaunch({url: '/pages/home'})
      //     }
      //   }
      // })
    }

    /* ============= 工具方法（app没法用mixins，就再写一遍了） ============= */
    isObject(item) {
      return typeof item === 'object' && !this.isArray(item)
    }

    isArray(item) {
      return Object.prototype.toString.apply(item) === '[object Array]'
    }

    isUndefined(item) {
      return typeof item === 'undefined'
    }

    /* ========================= 更新缓存信息 ======================== */
    $updateGlobalData(name, obj) {
      // 校验: globalData
      if (!this.globalData) return
      // 校验: 操作字段
      if (typeof name !== 'string' || name === '') return {}
      // 取已有信息
      const info = this.globalData[name] || {}
      // 更新缓存
      if (obj && this.isObject(obj)) {
        // Object合并第一层
        this.globalData[name] = Object.assign({}, info, obj)
      } else if (!this.isUndefined(obj)) {
        // 其他非undefined数据直接覆盖
        this.globalData[name] = obj
      }
      this.$apply && this.$apply()
      console.info(`[${obj ? 'UPDATE' : 'GET'} GlobalData ${name}]:`, this.globalData[name])
      return this.globalData[name]
    }
  }
</script>
